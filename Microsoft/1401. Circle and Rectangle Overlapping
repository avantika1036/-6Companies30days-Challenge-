/* Question: You are given a circle represented as (radius, xCenter, yCenter) and an axis-aligned rectangle represented as (x1, y1, x2, y2), where (x1, y1) are the coordinates of the bottom-left corner, and (x2, y2) are the coordinates of the top-right corner of the rectangle.
Return true if the circle and rectangle are overlapped otherwise return false. In other words, check if there is any point (xi, yi) that belongs to the circle and the rectangle at the same time.

Difficulty: Medium */


class Solution {
public:
    bool checkOverlap(int radius, int xCenter, int yCenter, int x1, int y1, int x2, int y2) 
    {
        int nearest_x = max(x1, min(x2, xCenter)); // first we take min of x2 and xc so that our point does not exceeds the right boundary then take max of it with x1 so that it does not exceeds th left boundary of the rectangle

        int nearest_y = max(y1, min(y2, yCenter));

        int dx = nearest_x - xCenter;
        int dy = nearest_y - yCenter;

        return dx * dx + dy * dy <= radius * radius;
    }
};