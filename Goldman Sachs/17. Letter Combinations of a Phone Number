/* Question: Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.

A mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.


Difficulty: Medium */


class Solution {
public:
    void findCombos(unordered_map<char, string>& mpp, string digits, vector<string>& ans, string combo, int i)
    {
        if(i == digits.size())
        {
            ans.push_back(combo);
            return;
        } 

        char digit = digits[i];
        for(char ch: mpp[digit])
        {
            findCombos(mpp, digits, ans, combo + ch, i + 1);
        }
    }

    vector<string> letterCombinations(string digits) {
        if(!digits.length()) return {};

        unordered_map<char, string> mpp;
        mpp = {{'2', "abc"}, {'3', "def"}, {'4', "ghi"}, {'5', "jkl"}, {'6', "mno"}, {'7', "pqrs"}, {'8', "tuv"}, {'9', "wxyz"}};

        vector<string> ans;
        string combo;
        findCombos(mpp, digits, ans, combo, 0);

        return ans;
    }
};