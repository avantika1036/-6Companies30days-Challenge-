/* Question: You are given three integers x, y, and z.

You have x strings equal to "AA", y strings equal to "BB", and z strings equal to "AB". You want to choose some (possibly all or none) of these strings and concatenate them in some order to form a new string. This new string must not contain "AAA" or "BBB" as a substring.

Return the maximum possible length of the new string.

A substring is a contiguous non-empty sequence of characters within a string.

Difficulty: Medium */


class Solution {
public:
    int longestString(int x, int y, int z) {
        int k = min(x, y); // these many AA, BB will form proper sequence

        int extra = abs(x - y); // if some AA/BB is left then they are will be he ones put first in seq so that larger seq forms

        if(extra) return 2 * (k + k + 1 + z); // odd pairs....eg AABBAA
        else return 2 * (k + k + z); // even pairs...eg AABB
    }
};