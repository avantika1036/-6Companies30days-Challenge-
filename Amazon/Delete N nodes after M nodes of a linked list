/* Question: Given a linked list, delete n nodes after skipping m nodes of a linked list until the last of the linked list.

Difficulty: Easy */


// Solution 1:
/*
delete n nodes after m nodes
  The input list will have at least one element
  Node is defined as

struct Node {
    int data;
    Node *next;

    Node(int x) {
        data = x;
        next = NULL;
    }
};

*/
class Solution {
  public:
    Node* linkdelete(Node* head, int n, int m) {
        Node* temp = head;
        
        while(temp != NULL)
        {
            Node* curr = temp;
            for(int i = 0; i < m - 1; i++)
            {
                if(curr != NULL)
                {
                    curr = curr -> next;
                }
                
                else break;
            }
            
            if(curr != NULL) temp = curr -> next;
            
            else
            {
                break;
            }
            
            for(int i = 0; i < n; i++)
            {
                if(temp != NULL)
                {
                    temp = temp -> next;
                }
                
                else break;
            }
            
            curr -> next = temp;
        }
        
        return head;
    }
};


// Solution 2:
/*
delete n nodes after m nodes
  The input list will have at least one element
  Node is defined as

struct Node {
    int data;
    Node *next;

    Node(int x) {
        data = x;
        next = NULL;
    }
};

*/
class Solution {
  public:
    Node* linkdelete(Node* head, int n, int m) {
        Node* node = head;
        
        while(node != NULL)
        {
            Node* prev;
            
            // skip m nodes
            for(int i = 0; i < m && node != NULL; i++)
            {
                prev = node;
                node = node -> next;
            }
            
            // delete n nodes
            for(int i = 0; i < n && node != NULL ; i++)
            {
                Node* temp = node;
                node = node -> next;
                delete temp;
            }
            
            prev -> next = node;
        }
        
        return head;
    }
};