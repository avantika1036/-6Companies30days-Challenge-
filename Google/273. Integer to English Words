/* Question: Convert a non-negative integer num to its English words representation.

Difficulty: Hard */


class Solution {
vector<string> belowTen = {"Zero", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"};
vector<string> belowTwenty = {"Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
vector<string> belowHundred = {"", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};
public:
    string solve(int num)
    {
        if(num < 10) return belowTen[num];

        if(num < 20) return belowTwenty[num % 10];

        if(num < 100) return belowHundred[num / 10] + ((num % 10 != 0) ? " " + belowTen[num % 10] : "");

        if(num < 1000) // hundreds
        {
            return solve(num / 100) + " Hundred" + ((num % 100 != 0) ? " " + solve(num % 100) : "");
        }

        if(num < 1000000) // thousands
        {
            return solve(num / 1000) + " Thousand" + ((num % 1000 != 0) ? " " + solve(num % 1000) : "");
        }

        if(num < 1000000000) // millions
        {
            return solve(num / 1000000) + " Million" + ((num % 1000000 != 0) ? " " + solve(num % 1000000) : "");
        }

        // billions
        return solve(num / 1000000000) + " Billion" + ((num % 1000000000 != 0) ? " " + solve(num % 1000000000) : "");
    }

    string numberToWords(int num) {
        if(num == 0) return "Zero";

        return solve(num);
    }
};